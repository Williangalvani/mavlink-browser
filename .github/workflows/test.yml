on:
  push:
    branches: main

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-20.04, windows-latest]
        version: [18,20]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.version }}
      - run: npm ci
      - run: npm test

  publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"
      - name: Check Version Change
        id: check
        uses: EndBug/version-check@v2
      - name: Get previous tag
        id: previousTag
        run: |
          name=$(git --no-pager tag --sort=creatordate --merged ${{ github.ref_name }} | tail -2 | head -1)
          echo "previousTag: $name"
          echo "previousTag=$name" >> $GITHUB_ENV
      - name: "✏️ Generate release changelog"
        if: steps.check.outputs.changed == 'true'
        uses: saadmk11/changelog-ci@v1.1.2
        id: changelog-ci
        with:
          # Optional, you can provide any name for your changelog file,
          # We currently support Markdown (.md) and reStructuredText (.rst) files
          # defaults to `CHANGELOG.md` if not provided.
          changelog_filename: CHANGELOG.md
          # Optional, only required when you want more customization
          # e.g: group your changelog by labels with custom titles,
          # different version prefix, pull request title and version number regex etc.
          # config file can be in JSON or YAML format.
          config_file: clconf.yml
          
          release_version: ${{ steps.check.outputs.version }}
          # Optional
          github_token: ${{ secrets.GITHUB_TOKEN }}


      - name: Create and Tag Release
        if: steps.check.outputs.changed == 'true'
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.check.outputs.version }}
          release_name: ${{ steps.check.outputs.version }}
          body: ${{ steps.changelog-ci.outputs.changelog }}
          draft: false
          prerelease: false
      
      
      - name: Publish to npm
        if: steps.check.outputs.changed == 'true'
        run: npm publish
        env: 
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
      - name: No Version Change
        if: steps.check.outputs.changed == 'false'
        run: echo no version change detected... Skipping publish and release
      

        

  